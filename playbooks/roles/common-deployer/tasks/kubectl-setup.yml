---
- name: Install kubectl
  become: yes
  package:
    name: kubectl
    state: present
  retries: 5
  delay: 2
  tags:
    - install

- name: Ensure kube folder exists
  file:
    state: directory
    path: "{{ ansible_user_dir }}/.kube"
    mode: "0700"

- name: Find if runner has a kubeconfig file
  stat:
    path: "{{ kubeconfig_file_path }}"
  delegate_to: localhost
  register: new_config

- name: Find if there is an existing .kube/config file
  stat:
    path: "{{ ansible_user_dir }}/.kube/config"
  register: old_config

- name: Copy local runner kubeconfig file to deployer node
  copy:
    src: "{{ kubeconfig_file_path }}"
    dest: "{{ ansible_user_dir }}/.kube/config"
    mode: "0600"
  when:
    - "new_config.stat.exists"
    - "( not old_config.stat.exists or old_config.stat.mtime < new_config.stat.mtime )"

- name: Test kubectl
  command: kubectl cluster-info
  changed_when: false
  register: _kubectlclusterinfo

- name: Show kubectl cluster-info
  debug:
    var: _kubectlclusterinfo
    verbosity: 1

- name: Do not proceed further if issues in kubectl
  assert:
    that:
      - _kubectlclusterinfo.stdout.find('\u001b[0;32mKubernetes master\u001b[0m is running') != -1
      - _kubectlclusterinfo.stdout.find('\u001b[0;32mKubeDNS\u001b[0m is running') != -1
